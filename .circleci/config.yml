version: 2
jobs:
  test_api:
    working_directory: ~/repo/server
    docker:
      - image: circleci/php:7.4-apache-node-browsers-legacy
    steps:
      - checkout:
          path: ~/repo
      - run: apt install -y sqlite3 zlib1g-dev
      - run: docker-php-ext-install zip
      - run: composer self-update
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
      - run: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - run:
          name: Run Test
          command: XDEBUG_MODE=coverage ./vendor/bin/phpunit
      - store_artifacts:
          path: ./test-report

  test_admin:
    docker:
      - image: circleci/node:15.12.0
    steps:
      - run: echo "Hello world Admin Test"

  test_teacher:
    working_directory: ~/repo/teacher
    docker:
      - image: circleci/node:15.12.0
    steps:
      - checkout:
          path: ~/repo
      - run:
          name: Node version
          command: node -v
      - run:
          name: Yarn Install
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Run Test
          command: yarn test
      - store_artifacts:
          path: ./coverage
      - store_test_results:
          path: ./coverage/junit/

  test_student:
    docker:
      - image: circleci/node:15.12.0
    steps:
      - run: echo "Hello world student Test"

  test_website:
    docker:
      - image: circleci/node:15.12.0
    steps:
      - run: echo "Hello world website Test"

  deploy_code_coverage:
    docker:
      - image: circleci/node:15.12.0
    steps:
      - run: echo "Deploying dev code coverage"

  build_staging:
    docker:
      - image: circleci/node:15.12.0
    steps:
      - run: echo "Building staging"

  build_prod:
    docker:
      - image: circleci/node:15.12.0
    steps:
      - run: echo "Building production"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test_api
      - test_admin
      - test_teacher
      - test_student
      - test_website
      - deploy_code_coverage:
          requires:
            - test_api
            - test_admin
            - test_teacher
            - test_student
            - test_website
          filters:
            branches:
              only:
                - master
                - develop
      - build_staging:
          requires:
            - deploy_code_coverage
          filters:
            branches:
              only: develop
      - build_prod:
          requires:
            - deploy_code_coverage
          filters:
            branches:
              only: master
